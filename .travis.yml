dist: bionic

services:
  - docker

notifications:
  email:
    on_success: change
    on_failure: change

################################################################################

_stage_base: &_stage_base
  before_install:
    - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
    - export WORKRAVE_FULL_TAG=`git describe --tags --abbrev=10`
    - export WORKRAVE_TAG=`git describe --abbrev=0`
    - export WORKRAVE_COMMIT_COUNT=`git rev-list ${WORKRAVE_TAG}..HEAD --count`
    - export WORKRAVE_COMMIT_HASH=`git rev-parse HEAD`
    - export WORKRAVE_BUILD_DATE=`date +"%Y%m%d"`
    - export WORKRAVE_BUILD_DATETIME=`date --iso-8601=seconds`
    - export WORKRAVE_BUILD_ID="$WORKRAVE_BUILD_DATE-$WORKRAVE_FULL_TAG"
    - export WORKRAVE_UPLOAD_DIR="snapshots/next/$WORKRAVE_BUILD_ID"
    - |
        if [ ${TRAVIS_OS_NAME} = "osx" ]; then
          # compilation with system wide gettext fails at the link stage with missing symbols...
          brew install gettext qt5 python3
          brew link gettext --force
          brew linkapps qt5
          brew outdated cmake || brew upgrade cmake

          pip3 install --user Jinja2==2.8 # required for dbus support, system (distro) wide include paths are ignored

        elif [ ${TRAVIS_OS_NAME} = "linux" ]; then
          sudo apt-get -y install python3 python3-pip python3-setuptools
          python3 -V
          pip3 -V
        fi

_stage_build_docker: &_stage_build_docker
  <<: *_stage_base
  os: linux
  dist: bionic
  language: cpp
  script: |
    if [[ $DOCKER_IMAGE ]]; then
      IFS=$'\n'
      docker run --rm \
          -v "$TRAVIS_BUILD_DIR:/workspace/source" \
          `printenv | grep -E '^(COMPILER|WITH_UI|CONFIGURATION|CONF_ENABLE|CONF_DISABLE|DOCKER_IMAGE|TRAVIS_TAG|TRAVIS_BUILD_DIR|TRAVIS_BUILD_NUMBER|TRAVIS_JOB_NUMBER|TRAVIS_REPO_SLUG|TRAVIS_OS_NAME|TRAVIS_BRANCH|WORKRAVE_.*)=' | sed -e 's/^/-e/g' ` \
          rcaelers/workrave-build:${DOCKER_IMAGE} \
          sh -c "/workspace/source/build/travis/build.sh"
    else
       build/travis/build.sh
    fi

_stage_build_osx: &_stage_build_osx
  <<: *_stage_base
  os: osx
  osx_image: xcode11
  language: cpp
  script:
    - build/travis/build.sh

jobs:
  include:
    - stage: prepare
      language: cpp
      script: |
      <<: *_stage_base

    ###########################################################################

    - stage: build
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-bionic"
      <<: *_stage_build_docker

    - stage: build
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-eoan"
      <<: *_stage_build_docker
      <<: *_stage_deploy

    - stage: build
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-focal"
      <<: *_stage_build_docker

    - stage: build
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE,TRACING"
        CONF_DISABLE="GCONF,TESTS,COVERAGE"
        DOCKER_IMAGE="ubuntu-focal"
      <<: *_stage_build_docker

    - stage: build
      env: >
        COMPILER="gcc"
        WITH_UI="Qt5"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE,TRACING"
        CONF_DISABLE="GCONF,TESTS,COVERAGE"
        DOCKER_IMAGE="ubuntu-focal"
      <<: *_stage_build_docker

    - stage: build
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONFIGURATION="Release"
        CONF_ENABLE=""
        CONF_DISABLE="INDICATOR,GSTREAMER,PULSE,GNOME_CLASSIC_PANEL,GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="mingw-gtk-rawhide"
      <<: *_stage_build_docker
      <<: *_stage_deploy

    - stage: build
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONFIGURATION="Debug"
        CONF_ENABLE="TRACING"
        CONF_DISABLE="INDICATOR,GSTREAMER,PULSE,GNOME_CLASSIC_PANEL,GCONF,TESTS,COVERAGE"
        DOCKER_IMAGE="mingw-gtk-rawhide"
      <<: *_stage_build_docker
      <<: *_stage_deploy

    - stage: build
      compiler: clang
      env: >
        WITH_UI="Qt5"
        CONF_ENABLE=""
        CONF_DISABLE="INDICATOR,GSTREAMER,PULSE,GNOME_CLASSIC_PANEL,GCONF,TESTS,COVERAGE,TRACING"
      <<: *_stage_build_osx

stages:
    - name: build
